0.5.15 (2006-10-31):

  - Raise a more informative exception when accessing Item references pointing
    to nonexistent items.
  - Enforce prevention of deletion of items referred to by references set to
    reference.DISALLOW.
  - Tables in the FROM clause of SQL generated by queries are now ordered by the
    order of the Item subclasses in the comparisons used to generate them.
  - A new IComparison implementation has been added to allow application-level
    code to explicitly specify the order of types in the join.

0.5.14 (2006-10-17):
  - Added a 'batchInsert' method to Store, allowing insertion of items without
    loading them into memory.
  - Change ItemQuery.deleteFromStore to delete items without loading them if
    possible.

0.5.13 (2006-10-05):
  - Changed userbase.getLoginMethods to return LoginMethods rather than
    (localpart, domain) tuples.

0.5.12 (2006-09-29):
  - Fixed a scheduler bug that would cause tasks scheduled in a substore to be
    removed from the scheduler.

0.5.11 (2006-09-20):
  - dependency.dependsOn now takes similar arguments to attributes.reference.

0.5.10 (2006-09-12):
  - The axiomatic commands "insert-user" and "extract-user" now interact with
    the scheduler properly.

0.5.9 (2006-08-30):
  - A new dependency-management system has been added, in axiom.dependency.

0.5.8 (2006-08-17):
  - The upgrader added in the previous release has been fixed.

0.5.7 (2006-08-14):
  - item.Item has a new method, stored, which will be called the first time an
    item is added to a store, in the same transaction as it is added.
  - A new class, item.Placeholder, has been added to assist in self-join
    queries.

0.5.6 (2006-07-18):
  - userbase.LoginSystem now raises a new exception type when login is attempted
    using a username with no domain part.

0.5.5 (2006-07-08):
  - SubStoreStartupService was removed; user stores' services are no longer
    incorrectly started when the Mantissa administrative powerup is installed.
  - IPowerupIndirector was added, allowing for installation of SubStore items
    as powerups on other items.

0.5.4 (2006-07-05):
  - Items with attributes.path attributes can now be upgraded.
  - axiom.scheduler has been improved to make clock-related tests easier to write.
  - Improved test coverage and various bugfixes.

0.5.3 (2006-06-27):
  - A bug causing the table name cache to grow too large was fixed.

0.5.2 (2006-06-26):
  - Type names are now determined on a per-store basis, rather than cached
    globally on the Item.

0.5.1 (2006-06-16):
  - axiom.slotmachine._structlike removed in favor of the implementation in
    Epsilon, epsilon.structlike.record.
  - The batch process has been adjusted to do more work per iteration. 

0.5.0 (2006-06-12):
  Highlights:
  - Fixed several bugs, including several potential data-corruption issues.
    All users are recommended to upgrade, but back up your data and test your
    upgrade first!
  - There is now a 'money' attribute type which uses fixed-precision math in
    the database specifically designed for dealing with the types of issues
    associated with database-persistent financial data.
  - Some simple relational constraints (the equivalent of ON DELETE CASCADE)
    have been implemented using the 'whenDeleted' keyword argument.
  - Indexes which are created in your code will now automatically be added to
    opened databases without requiring an upgrader or a change to your Item's
    schemaVersion.
  - You can now use 'declareLegacyItem' to declare legacy schemas to record the
    schema of older versions of your software -- this enables upgrading of more
    than one step per release of your application code.
  - You can now create multi-column indexes using attributes.compoundIndex.
  ---
  - Made Item.typeName and Item.schemaVersion optional in most cases.
  - Added axiom.batch for reliably operating on large groups of items.
  - Removed all usages of util.wait from tests
  - added 'queryutil.contains' utility query method, for testing when a value
    is between two attributes.
  - Added 'negate' argument to oneOf, allowing for issing SQL 'NOT IN' queries.
  - Improved reliability of the scheduler.  Errors are now logged in a
    structured manner.
  - Added helper classes for writing axiomatic plug-in commands; see
    documentation for axiomatic.scripts.axiomatic.AxiomaticCommand and
    AxiomaticSubCommand.
  - AttributeQuery now provides .min() and .max() methods which return the
    obvious thing.
  - Transactions are more managed more conservatively; BEGIN IMMEDIATE
    TRANSACTION is used at the beginning of each transact() call, to guarantee
    that concurrent access is safe, if sometimes slightly slower.
  - SQL generation has been deferred to query time, which means that there is a
    more complete API for manipulating Query objects.
  - repr() of various objects has been improved for easier debugging.
  - Axiom now emits various log events which you can observe if you wish to
    analyze query statistics in real-time.  These events don't go to the text log by
    default: Mantissa, for example, uses them to display a pie chart of the
    most expensive queries on a running system.

0.4.0 (2005-12-20):
  - Fixed sum() in the case of a table with no rows.
  - LoginAccount no longer contains authentication information, but may be
    referred to by one or more LoginMethods, which do.
  - Added an attribute type for floats: ieee754_double.
  - Enhanced functionality in axiom.sequence.List.
  - Added support for SQL DISTINCT queries.
  - On the command line, axiomatic will attempt to automatically discover
    the correct database to use, if one is not specified.
  - PID and logfiles are now kept in a subdirectory of the database
    directory.
  - The "start" axiomatic subcommand now works on Windows.
  - Two new axiomatic subcommands have been added related to running servers
    from Axiom database: "stop" and "status".
  - Two new axiomatic subcommands have been added related to user
    management: "extract-user" and "insert-user" for removing users from and
    adding users to an existing credentials database, along with all of
    their data.
  - Axiom queries can now be sorted by a tuple of columns.

0.3.0 (2005-11-02):
  - Removed Axiom/axiom/examples/axiom.tac
  - Added 'axiomatic start'
  - added 'hyper', a 'super' capable of working with Item mixins
  - added check to make sure Unicode strings won't be misleadingly persisted as
    bytes(), like so:
        >>> str(buffer(u'hello'))
        'h\x00\x00\x00e\x00\x00\x00l\x00\x00\x00l\x00\x00\x00o\x00\x00\x00'
  - formalized and improved query result to be an object with its own interface
    rather than a generator
  - correctly call activate() on items after they have been upgraded

0.2.0 (2005-10-27):
  - Removed accidental Mantissa dependency
  - Automatic upgrade service added
  - Lots of new docstrings
  - Query utility module added, with a function for finding overlapping
    ranges
  - Added formal interface for the `where' argument to Store.query()
  - Added 'oneOf' attribute
