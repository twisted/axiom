#!/usr/bin/python

# Benchmark of loading existing Items from an Axiom store.  Accepts one
# parameter, the number of attributes to place on the schema of the Item to
# create.  Reports one statistic, the number of seconds it takes to load an
# Item of such a type.

import sys, time

from axiom.store import Store
from axiom.attributes import integer

import benchlib


def benchmark(numAttributes):
    SomeItem = benchlib.itemTypeWithSomeAttributes([integer] * numAttributes)
    values = dict.fromkeys((name for (name, attr) in SomeItem.getSchema()), 0)

    store = Store()
    counter = range(1, 10001)
    store.transact(benchlib.createSomeItems, store, SomeItem, values, counter)

    start = time.time()
    for i in counter:
        store.getItemByID(i)
    finish = time.time()

    return (finish - start) / len(counter)


def main(argv):
    if len(argv) != 2:
        raise SystemExit("Usage: %s <number of attributes>" % (argv[0],))
    print benchmark(int(argv[1]))


if __name__ == '__main__':
    main(sys.argv)
